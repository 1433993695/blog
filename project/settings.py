"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from . import localsetting

def getLocal(name, default=''):
    if hasattr(localsetting, name):
        return getattr(localsetting, name)
    else:
        return default


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getLocal('SECRET_KEY', '')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getLocal("DEBUG", False)

ALLOWED_HOSTS = getLocal("ALLOWED_HOSTS", [])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'weixin',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DB_USER = getLocal("DB_USER", "root")
DB_PASSWORD = getLocal("DB_PASSWORD", "root625")
DB_HOST = getLocal("DB_HOST", 'localhost')
DB_PORT = getLocal("DB_PORT", '3306')
DB_NAME = getLocal("DB_NAME", 'wublog')
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = getLocal("STATIC_ROOT", os.path.join(BASE_DIR, "static"))

# 简单校验
OPERATOR_AUTH = getLocal("OPERATOR_AUTH", {})


# 微信服务配置
WEIXIN_OPEN_TOKEN = getLocal("WEIXIN_OPEN_TOKEN", "")
WEIXIN_APP_ID = getLocal("WEIXIN_APP_ID", "")
WEIXIN_APP_SECRET = getLocal("WEIXIN_APP_SECRET", "")
WEIXIN_ACCOUNT_ID = getLocal("WEIXIN_ACCOUNT_ID", "")

YOUCLOUD_ACCOUNT_CENTER_HOST = getLocal("YOUCLOUD_ACCOUNT_CENTER_HOST", "")

WEB_HOST_NAME = getLocal("WEB_HOST_NAME", "")
WEB_IMAGE_SERVER_PATH = getLocal("WEB_IMAGE_SERVER_PATH", "")

IMAGE_SAVING_PATH = getLocal("IMAGE_SAVING_PATH", "")
IMAGE_SIZE_LIMIT = getLocal("IMAGE_SIZE_LIMIT", "")










